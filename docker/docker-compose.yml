version: '3.7'
services:
  minio:
    image: minio/minio:latest                                    # 原镜像`minio/minio:latest`
    container_name: minio                                        # 容器名为'minio'
    restart: unless-stopped                                              # 指定容器退出后的重启策略为始终重启，但是不考虑在Docker守护进程启动时就已经停止了的容器
    volumes:                                                     # 数据卷挂载路径设置,将本机目录映射到容器目录
      - "./docker-minio/data:/data"  #容器中的数据将存储在主机的 ./docker-minio/data 目录中
      - "./docker-minio/minio:/minio"
      - "./docker-minio/config:/root/.minio"
    environment:                                      # 设置环境变量,相当于docker run命令中的-e
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin                 # 登录密码
    command: server /data  --console-address ":9001"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    ports:                              # 映射端口
      - "9000:9000" # api端口
      - "9001:9001" # 控制台端口



  redis:
    image: redis
    restart: always
    hostname: myredis
    container_name: myredis
    privileged: true
    ports:
      - "6379:6379"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./data:/data
      - ./conf/redis.conf:/etc/redis/redis.conf
      - ./logs:/logs
    command: ["redis-server","/etc/redis/redis.conf"]







  mysql-master:
    image: mysql:8.0.13
    container_name: mysql-master
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      MASTER_SYNC_USER: "sync_admin" #设置脚本中定义的用于同步的账号
      MASTER_SYNC_PASSWORD: "123456" #设置脚本中定义的用于同步的密码
      ADMIN_USER: "root" #当前容器用于拥有创建账号功能的数据库账号
      ADMIN_PASSWORD: "123456"
      ALLOW_HOST: "10.10.%.%" #允许同步账号的host地址
      TZ: "Asia/Shanghai" #解决时区问题
    networks:
      mysql:
        ipv4_address: "10.10.10.10" #固定ip，因为从库在连接master的时候，需要设置host
    volumes:
      - ./init/master:/docker-entrypoint-initdb.d #挂载master脚本
    command:
      -  "--server-id=1"
      -  "--character-set-server=utf8mb4"
      -  "--collation-server=utf8mb4_unicode_ci"
      -  "--log-bin=mysql-bin"
      -  "--sync_binlog=1"
  mysql-slave1:
    image: mysql:8.0.13
    container_name: mysql-slave1
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      SLAVE_SYNC_USER: "sync_admin" #用于同步的账号，由master创建
      SLAVE_SYNC_PASSWORD: "123456"
      ADMIN_USER: "root"
      ADMIN_PASSWORD: "123456"
      MASTER_HOST: "10.10.10.10" #master地址，开启主从同步需要连接master
      TZ: "Asia/Shanghai" #设置时区
    networks:
      - mysql
    volumes:
      - ./init/slave:/docker-entrypoint-initdb.d #挂载slave脚本
    command:
      -  "--server-id=2"
      -  "--character-set-server=utf8mb4"
      -  "--collation-server=utf8mb4_unicode_ci"
  mysql-slave2:
    image: mysql:8.0.13
    container_name: mysql-slave2
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      SLAVE_SYNC_USER: "sync_admin"
      SLAVE_SYNC_PASSWORD: "123456"
      ADMIN_USER: "root"
      ADMIN_PASSWORD: "123456"
      MASTER_HOST: "10.10.10.10"
      TZ: "Asia/Shanghai"
    networks:
      - mysql
    volumes:
      - ./init/slave:/docker-entrypoint-initdb.d
    command: #这里需要修改server-id，保证每个mysql容器的server-id都不一样
      -  "--server-id=3"
      -  "--character-set-server=utf8mb4"
      -  "--collation-server=utf8mb4_unicode_ci"
networks:
  mysql:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "10.10.0.0/16"
